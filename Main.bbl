\begin{thebibliography}{10}

\bibitem{alur2013automated}
Rajeev Alur, Loris D'Antoni, Sumit Gulwani, Dileep Kini, and Mahesh
  Viswanathan.
\newblock Automated grading of dfa constructions.
\newblock In {\em IJCAI}, volume~13, pages 1976--1982, 2013.

\bibitem{bates1993incremental}
Samuel Bates and Susan Horwitz.
\newblock Incremental program testing using program dependence graphs.
\newblock In {\em Proceedings of the 20th ACM SIGPLAN-SIGACT symposium on
  Principles of programming languages}, pages 384--396. ACM, 1993.

\bibitem{baxter1998clone}
Ira~D Baxter, Andrew Yahin, Leonardo Moura, Marcelo Sant'Anna, and Lorraine
  Bier.
\newblock Clone detection using abstract syntax trees.
\newblock In {\em Software Maintenance, 1998. Proceedings., International
  Conference on}, pages 368--377. IEEE, 1998.

\bibitem{binkley1992using}
David Binkley.
\newblock Using semantic differencing to reduce the cost of regression testing.
\newblock In {\em Software Maintenance, 1992. Proceerdings., Conference on},
  pages 41--50. IEEE, 1992.

\bibitem{cadar2013symbolic}
Cristian Cadar and Koushik Sen.
\newblock Symbolic execution for software testing: three decades later.
\newblock {\em Communications of the ACM}, 56(2):82--90, 2013.

\bibitem{coursera}
Coursera.
\newblock https://www.coursera.org/.

\bibitem{dang2012xiao}
Yingnong Dang, Dongmei Zhang, Song Ge, Chengyun Chu, Yingjun Qiu, and Tao Xie.
\newblock Xiao: Tuning code clones at hands of engineers in practice.
\newblock In {\em Proceedings of the 28th Annual Computer Security Applications
  Conference}, pages 369--378. ACM, 2012.

\bibitem{edx}
EdX.
\newblock https://www.edx.org/.

\bibitem{godefroid2008automated}
Patrice Godefroid, Michael~Y Levin, David~A Molnar, et~al.
\newblock Automated whitebox fuzz testing.
\newblock In {\em NDSS}, volume~8, pages 151--166, 2008.

\bibitem{CodeHunt}
Code Hunt.
\newblock https://www.microsoft.com/en-us/research/project/code-hunt/.

\bibitem{jackson1994semantic}
Daniel Jackson, David~A Ladd, et~al.
\newblock Semantic diff: A tool for summarizing the effects of modifications.
\newblock In {\em ICSM}, volume~94, pages 243--252, 1994.

\bibitem{jiang2009automatic}
Lingxiao Jiang and Zhendong Su.
\newblock Automatic mining of functionally equivalent code fragments via random
  testing.
\newblock In {\em Proceedings of the eighteenth international symposium on
  Software testing and analysis}, pages 81--92. ACM, 2009.

\bibitem{komondoor2001using}
Raghavan Komondoor and Susan Horwitz.
\newblock Using slicing to identify duplication in source code.
\newblock In {\em International Static Analysis Symposium}, pages 40--56.
  Springer, 2001.

\bibitem{li2016measuring}
Sihan Li, Xusheng Xiao, Blake Bassett, Tao Xie, and Nikolai Tillmann.
\newblock Measuring code behavioral similarity for programming and software
  engineering education.
\newblock In {\em Proceedings of the 38th International Conference on Software
  Engineering Companion}, pages 501--510. ACM, 2016.

\bibitem{merlo2004linear}
Ettore Merlo, Giuliano Antoniol, Massimiliano Di~Penta, and Vincenzo~Fabio
  Rollo.
\newblock Linear complexity object-oriented similarity for clone detection and
  software evolution analyses.
\newblock In {\em Software Maintenance, 2004. Proceedings. 20th IEEE
  International Conference on}, pages 412--416. IEEE, 2004.

\bibitem{myers2011art}
Glenford~J Myers, Corey Sandler, and Tom Badgett.
\newblock {\em The art of software testing}.
\newblock John Wiley \& Sons, 2011.

\bibitem{DSE}
Mayur Naik.
\newblock http://www.cis.upenn.edu/~mhnaik/edu/cis700/index.html.

\bibitem{mooc}
Coursera~MOOC on~Software Engineering~for SaaS.
\newblock https://www.coursera.org/course/saas.

\bibitem{Pex4Fun}
Pex4Fun.
\newblock https://pexforfun.com/.

\bibitem{singh2013automated}
Rishabh Singh, Sumit Gulwani, and Armando Solar-Lezama.
\newblock Automated feedback generation for introductory programming
  assignments.
\newblock {\em ACM SIGPLAN Notices}, 48(6):15--26, 2013.

\bibitem{tillmann2008pex}
Nikolai Tillmann and Jonathan De~Halleux.
\newblock Pex--white box test generation for. net.
\newblock {\em Tests and Proofs}, pages 134--153, 2008.

\bibitem{tillmann2014transferring}
Nikolai Tillmann, Jonathan De~Halleux, and Tao Xie.
\newblock Transferring an automated test generation tool to practice: From pex
  to fakes and code digger.
\newblock In {\em Proceedings of the 29th ACM/IEEE international conference on
  Automated software engineering}, pages 385--396. ACM, 2014.

\bibitem{tillmann2013teaching}
Nikolai Tillmann, Jonathan De~Halleux, Tao Xie, Sumit Gulwani, and Judith
  Bishop.
\newblock Teaching and learning programming and software engineering via
  interactive gaming.
\newblock In {\em Proceedings of the 2013 International Conference on Software
  Engineering}, pages 1117--1126. IEEE Press, 2013.

\bibitem{Udacity}
Udacity.
\newblock http://www.udacity.com/.

\bibitem{wang2007semantic}
Tiantian Wang, Xiaohong Su, Yuying Wang, and Peijun Ma.
\newblock Semantic similarity-based grading of student programs.
\newblock volume~49, pages 99--107. Elsevier, 2007.

\bibitem{xie2009fitness}
Tao Xie, Nikolai Tillmann, Jonathan de~Halleux, and Wolfram Schulte.
\newblock Fitness-guided path exploration in dynamic symbolic execution.
\newblock In {\em Dependable Systems \& Networks, 2009. DSN'09. IEEE/IFIP
  International Conference on}, pages 359--368. IEEE, 2009.

\end{thebibliography}
